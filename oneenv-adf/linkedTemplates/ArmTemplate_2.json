{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "oneenv-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_parquet_maintenanceheader')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLandingZone",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_fleetmaintenance')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLMaintenanceDemo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "device",
						"type": "nvarchar"
					},
					{
						"name": "date",
						"type": "date"
					},
					{
						"name": "maintance",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "maintenanceheader"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fleetmaintenance-copy-demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_maintenance_header to landing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[maintenance_header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_maintenanceheader",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "fleetmaintenance/maintenanceheader",
									"FileName": {
										"value": "@concat('maintenanceheader_', guid(), '.parquet' )",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "copy_power_output to landing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[power_output] ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_maintenanceheader",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "fleetmaintenance/poweroutput",
									"FileName": {
										"value": "@concat('poweroutput_', guid(), '.parquet' )",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "iotdemo"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-15T20:09:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_fleetmaintenance')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet_maintenanceheader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fleetmaintenance-copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_maintenance_header to landing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[maintenance_header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_maintenanceheader",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "fleetmaintenance/maintenanceheader",
									"FileName": {
										"value": "@concat('maintenanceheader_', guid(), '.parquet' )",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "copy_power_output to landing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[power_output] ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_maintenanceheader",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "fleetmaintenance/poweroutput",
									"FileName": {
										"value": "@concat('poweroutput_', guid(), '.parquet' )",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "execute batch delta load",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "copy_maintenance_header to landing",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copy_power_output to landing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Azure Integration Demo/IoT-Demo/part1-batch-data-factory-data-lake-to-delta"
						},
						"linkedServiceName": {
							"referenceName": "Oneenv Azure Databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "iotdemo"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-15T20:08:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_fleetmaintenance')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet_maintenanceheader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fleetmaintenance-copy_detailed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_maintenance_header",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get maintenance_header_ETLTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM [dbo].[maintenance_header] WHERE date >=''', activity('Get maintenance_header_ETLTimestamp').output.firstRow.LastETLRunTime, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_maintenanceheader",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "fleetmaintenance/maintenanceheader",
									"FileName": {
										"value": "@concat('maintenanceheader_', guid(), '.parquet' )",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "copy_power_output",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get power_output_ETLTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM [dbo].[power_output] WHERE date >=''', activity('Get power_output_ETLTimestamp').output.firstRow.LastETLRunTime, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_maintenanceheader",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "fleetmaintenance/poweroutput",
									"FileName": {
										"value": "@concat('poweroutput_', guid(), '.parquet' )",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "execute batch delta load",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set maintenance_header_ETLTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set power_output_ETLTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/william.braccialli@databricks.com/IoT-Demo/part1-batch-data-factory-data-lake-to-delta"
						},
						"linkedServiceName": {
							"referenceName": "Oneenv Azure Databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set maintenance_header_ETLTimestamp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_maintenance_header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspSetETLTimestamp]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "maintenance_header",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLMaintenanceDemo",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get maintenance_header_ETLTimestamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetETLTimestamp]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "maintenance_header"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get power_output_ETLTimestamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetETLTimestamp]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "power_output"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set power_output_ETLTimestamp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_power_output",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspSetETLTimestamp]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "power_output",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLMaintenanceDemo",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "iotdemo"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-13T19:10:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_fleetmaintenance')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet_maintenanceheader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-03-31T19:02:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference"
							},
							"name": "source12"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_fleetmaintenance",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tdevice as string,\n\t\tdate as date,\n\t\tmaintance as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source12\nsource12 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tdevice as string,\n\t\tdate as date,\n\t\tmaintance as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_fleetmaintenance')]"
			]
		}
	]
}