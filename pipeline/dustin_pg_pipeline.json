{
	"name": "dustin_pg_pipeline",
	"properties": {
		"activities": [
			{
				"name": "nyctaxi_CSV_to_PG",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzurePostgreSQLSink",
						"writeBatchSize": 1000000,
						"writeBatchTimeout": "00:30:00",
						"writeMethod": "CopyCommand"
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "dropoff_longitude",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "dropoff_longitude",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "dropoff_latitude",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "dropoff_latitude",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "pickup_longitude",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "pickup_longitude",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "pickup_latitude",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "pickup_latitude",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "RatecodeID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ratecodeid",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "VendorID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "vendorid",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "extra",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "extra",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "fare_amount",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "fare_amount",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "improvement_surcharge",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "improvement_surcharge",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "mta_tax",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "mta_tax",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "passenger_count",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "passenger_count",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "payment_type",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "payment_type",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "store_and_fwd_flag",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "store_and_fwd_flag",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "tip_amount",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "tip_amount",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "tolls_amount",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "tolls_amount",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "total_amount",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "total_amount",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "tpep_dropoff_datetime",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "tpep_dropoff_datetime",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "tpep_pickup_datetime",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "tpep_pickup_datetime",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "trip_distance",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "trip_distance",
									"type": "String",
									"physicalType": "character varying"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "nyc_taxi_csv",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "PostgresNycTaxiTrips",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "nyctaxi_PG_to_Delta",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.04:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureDatabricksDeltaLakeSink",
						"importSettings": {
							"type": "AzureDatabricksDeltaLakeImportCommand"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "PostgresNycTaxiTrips",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DustinDelta",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "dustin_pg_dataflow",
				"type": "ExecuteDataFlow",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "nyctaxi_CSV_to_PG",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "dustin_pg_dataflow",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 32,
						"computeType": "General"
					},
					"traceLevel": "Fine",
					"continuationSettings": {
						"customizedCheckpointKey": "3c937efb-6362-4c55-abcd-43e0be71afc3"
					}
				}
			},
			{
				"name": "GetMaxWatermarkValue",
				"description": "Query the source object to get the max value from watermark column",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set watermark_end",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "select max(modified_timestamp) as CurrentMaxWaterMarkColumnValue from public.watermarks\nwhere table_name = 'trip'",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "PostgresControlTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "DeltaLoadOneObject",
				"description": "Copy the changed data only from last time via comparing the value in watermark column to identify changes.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "GetMaxWatermarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "trip"
					},
					{
						"name": "Destination",
						"value": "ext_loc_1/pg/trip"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "select * from public.trip \n    where modified_timestamp > \n    @{activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue}\n    and \n        modified_timestamp <= @{variables('watermark_end')}",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "PostgresNycTaxiTrips",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Dustin_MetadataDrivenCopyTask_0vy_DestinationDS",
						"type": "DatasetReference",
						"parameters": {
							"cw_compressionCodec": {
								"value": "snappy",
								"type": "Expression"
							},
							"cw_fileName": {
								"value": "trip",
								"type": "Expression"
							},
							"cw_folderPath": {
								"value": "external_loc_1/pg_cdf",
								"type": "Expression"
							},
							"cw_fileSystem": {
								"value": "dustinvannoy",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Update Watermark",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "DeltaLoadOneObject",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "SELECT update_watermark('@{variables('watermark_end')}');",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "PostgresControlTable",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Set watermark_end",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "watermark_end",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"watermark_end": {
				"type": "String"
			}
		},
		"annotations": []
	}
}